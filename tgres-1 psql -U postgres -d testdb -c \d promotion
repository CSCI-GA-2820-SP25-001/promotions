[33mcommit 08042bee7430e8005617792e9263ab2dac8236c1[m
Author: zwanggd <76803838+zwanggd@users.noreply.github.com>
Date:   Sun Mar 9 15:04:54 2025 +0000

    Added Promotion model

[1mdiff --git a/service/models.py b/service/models.py[m
[1mindex 5c78329..0084cb1 100644[m
[1m--- a/service/models.py[m
[1m+++ b/service/models.py[m
[36m@@ -1,5 +1,5 @@[m
 """[m
[31m-Models for YourResourceModel[m
[32m+[m[32mModels for Promotion[m
 [m
 All of the models are stored in this module[m
 """[m
[36m@@ -17,9 +17,9 @@[m [mclass DataValidationError(Exception):[m
     """Used for an data validation errors when deserializing"""[m
 [m
 [m
[31m-class YourResourceModel(db.Model):[m
[32m+[m[32mclass Promotion(db.Model):[m
     """[m
[31m-    Class that represents a YourResourceModel[m
[32m+[m[32m    Class that represents a Promotion[m
     """[m
 [m
     ##################################################[m
[36m@@ -27,15 +27,21 @@[m [mclass YourResourceModel(db.Model):[m
     ##################################################[m
     id = db.Column(db.Integer, primary_key=True)[m
     name = db.Column(db.String(63))[m
[32m+[m[32m    promotion_id = db.Column(db.String(63), nullable=False, unique=True)[m
[32m+[m[32m    start_date = db.Column(db.DateTime, nullable=False)[m
[32m+[m[32m    end_date = db.Column(db.DateTime, nullable=False)[m
[32m+[m[32m    promotion_type = db.Column(db.String(63), nullable=False)[m
[32m+[m[32m    promotion_amount = db.Column(db.Float, nullable=False)[m
[32m+[m[32m    promotion_description = db.Column(db.String(255), nullable=False)[m
 [m
     # Todo: Place the rest of your schema here...[m
 [m
     def __repr__(self):[m
[31m-        return f"<YourResourceModel {self.name} id=[{self.id}]>"[m
[32m+[m[32m        return f"<Promotion {self.name} id=[{self.id}]>"[m
 [m
     def create(self):[m
         """[m
[31m-        Creates a YourResourceModel to the database[m
[32m+[m[32m        Creates a Promotion to the database[m
         """[m
         logger.info("Creating %s", self.name)[m
         self.id = None  # pylint: disable=invalid-name[m
[36m@@ -49,7 +55,7 @@[m [mclass YourResourceModel(db.Model):[m
 [m
     def update(self):[m
         """[m
[31m-        Updates a YourResourceModel to the database[m
[32m+[m[32m        Updates a Promotion to the database[m
         """[m
         logger.info("Saving %s", self.name)[m
         try:[m
[36m@@ -60,7 +66,7 @@[m [mclass YourResourceModel(db.Model):[m
             raise DataValidationError(e) from e[m
 [m
     def delete(self):[m
[31m-        """Removes a YourResourceModel from the data store"""[m
[32m+[m[32m        """Removes a Promotion from the data store"""[m
         logger.info("Deleting %s", self.name)[m
         try:[m
             db.session.delete(self)[m
[36m@@ -71,27 +77,42 @@[m [mclass YourResourceModel(db.Model):[m
             raise DataValidationError(e) from e[m
 [m
     def serialize(self):[m
[31m-        """Serializes a YourResourceModel into a dictionary"""[m
[31m-        return {"id": self.id, "name": self.name}[m
[32m+[m[32m        """Serializes a Promotion into a dictionary"""[m
[32m+[m[32m        return {[m
[32m+[m[32m            "id": self.id,[m
[32m+[m[32m            "name": self.name,[m
[32m+[m[32m            "promotion_id": self.promotion_id,[m
[32m+[m[32m            "start_date": self.start_date,[m
[32m+[m[32m            "end_date": self.end_date,[m
[32m+[m[32m            "promotion_type": self.promotion_type,[m
[32m+[m[32m            "promotion_amount": self.promotion_amount,[m
[32m+[m[32m            "promotion_description": self.promotion_description,[m
[32m+[m[32m        }[m
 [m
     def deserialize(self, data):[m
         """[m
[31m-        Deserializes a YourResourceModel from a dictionary[m
[32m+[m[32m        Deserializes a Promotion from a dictionary[m
 [m
         Args:[m
             data (dict): A dictionary containing the resource data[m
         """[m
         try:[m
             self.name = data["name"][m
[32m+[m[32m            self.promotion_id = data["promotion_id"][m
[32m+[m[32m            self.start_date = data["start_date"][m
[32m+[m[32m            self.end_date = data["end_date"][m
[32m+[m[32m            self.promotion_type = data["promotion_type"][m
[32m+[m[32m            self.promotion_amount = data["promotion_amount"][m
[32m+[m[32m            self.promotion_description = data["promotion_description"][m
         except AttributeError as error:[m
             raise DataValidationError("Invalid attribute: " + error.args[0]) from error[m
         except KeyError as error:[m
             raise DataValidationError([m
[31m-                "Invalid YourResourceModel: missing " + error.args[0][m
[32m+[m[32m                "Invalid Promotion: missing " + error.args[0][m
             ) from error[m
         except TypeError as error:[m
             raise DataValidationError([m
[31m-                "Invalid YourResourceModel: body of request contained bad or no data "[m
[32m+[m[32m                "Invalid Promotion: body of request contained bad or no data "[m
                 + str(error)[m
             ) from error[m
         return self[m
[36m@@ -102,22 +123,22 @@[m [mclass YourResourceModel(db.Model):[m
 [m
     @classmethod[m
     def all(cls):[m
[31m-        """Returns all of the YourResourceModels in the database"""[m
[31m-        logger.info("Processing all YourResourceModels")[m
[32m+[m[32m        """Returns all of the Promotions in the database"""[m
[32m+[m[32m        logger.info("Processing all Promotions")[m
         return cls.query.all()[m
 [m
     @classmethod[m
     def find(cls, by_id):[m
[31m-        """Finds a YourResourceModel by it's ID"""[m
[32m+[m[32m        """Finds a Promotion by it's ID"""[m
         logger.info("Processing lookup for id %s ...", by_id)[m
         return cls.query.session.get(cls, by_id)[m
 [m
     @classmethod[m
     def find_by_name(cls, name):[m
[31m-        """Returns all YourResourceModels with the given name[m
[32m+[m[32m        """Returns all Promotions with the given name[m
 [m
         Args:[m
[31m-            name (string): the name of the YourResourceModels you want to match[m
[32m+[m[32m            name (string): the name of the Promotions you want to match[m
         """[m
         logger.info("Processing name query for %s ...", name)[m
         return cls.query.filter(cls.name == name)[m
[1mdiff --git a/service/routes.py b/service/routes.py[m
[1mindex b45c995..52cf17d 100644[m
[1m--- a/service/routes.py[m
[1m+++ b/service/routes.py[m
[36m@@ -15,15 +15,15 @@[m
 ######################################################################[m
 [m
 """[m
[31m-YourResourceModel Service[m
[32m+[m[32mPromotion Service[m
 [m
 This service implements a REST API that allows you to Create, Read, Update[m
[31m-and Delete YourResourceModel[m
[32m+[m[32mand Delete Promotion[m
 """[m
 [m
 from flask import jsonify, request, url_for, abort[m
 from flask import current_app as app  # Import Flask application[m
[31m-from service.models import YourResourceModel[m
[32m+[m[32mfrom service.models import Promotion[m
 from service.common import status  # HTTP Status Codes[m
 [m
 [m
[1mdiff --git a/tests/factories.py b/tests/factories.py[m
[1mindex 465344b..c947c68 100644[m
[1m--- a/tests/factories.py[m
[1m+++ b/tests/factories.py[m
[36m@@ -3,18 +3,22 @@[m [mTest Factory to make fake objects for testing[m
 """[m
 [m
 import factory[m
[31m-from service.models import YourResourceModel[m
[32m+[m[32mfrom service.models import Promotion[m
 [m
 [m
[31m-class YourResourceModelFactory(factory.Factory):[m
[32m+[m[32mclass PromotionFactory(factory.Factory):[m
     """Creates fake pets that you don't have to feed"""[m
 [m
     class Meta:  # pylint: disable=too-few-public-methods[m
         """Maps factory to data model"""[m
 [m
[31m-        model = YourResourceModel[m
[32m+